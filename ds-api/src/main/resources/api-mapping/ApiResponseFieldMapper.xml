<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ds.api.entity.mapper.ApiResponseFieldMapper">
    <resultMap id="BaseResultMap" type="com.ds.api.entity.model.ApiResponseField">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="uname" property="uname" jdbcType="VARCHAR"/>
        <result column="api_request_id" property="apiRequestId" jdbcType="BIGINT"/>
        <result column="field_type" property="fieldType" jdbcType="INTEGER"/>
        <result column="field_key" property="fieldKey" jdbcType="VARCHAR"/>
        <result column="field_value" property="fieldValue" jdbcType="VARCHAR"/>
        <result column="field_default" property="fieldDefault" jdbcType="VARCHAR"/>
        <result column="parent_key" property="parentKey" jdbcType="VARCHAR"/>
        <result column="is_bottom" property="isBottom" jdbcType="INTEGER"/>
        <result column="field_grade" property="fieldGrade" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="BaseResultMapVo" type="com.ds.api.entity.vo.ApiResponseFieldVo">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="uname" property="uname" jdbcType="VARCHAR"/>
        <result column="api_request_id" property="apiRequestId" jdbcType="BIGINT"/>
        <result column="field_type" property="fieldType" jdbcType="INTEGER"/>
        <result column="field_key" property="fieldKey" jdbcType="VARCHAR"/>
        <result column="field_value" property="fieldValue" jdbcType="VARCHAR"/>
        <result column="field_default" property="fieldDefault" jdbcType="VARCHAR"/>
        <result column="parent_key" property="parentKey" jdbcType="VARCHAR"/>
        <result column="is_bottom" property="isBottom" jdbcType="INTEGER"/>
        <result column="field_grade" property="fieldGrade" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    uid, uname, api_request_id, field_type, field_key, field_value, field_default, is_bottom, 
    field_grade, parent_key
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from api_response_field
        where uid = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from api_response_field
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.ds.api.entity.model.ApiResponseField">
    insert into api_response_field (uid, uname, api_request_id, 
      field_type, field_key, field_value, 
      field_default, is_bottom, field_grade, parent_key
      )
    values (#{uid,jdbcType=BIGINT}, #{uname,jdbcType=VARCHAR}, #{apiRequestId,jdbcType=BIGINT}, 
      #{fieldType,jdbcType=INTEGER}, #{fieldKey,jdbcType=VARCHAR}, #{fieldValue,jdbcType=VARCHAR}, 
      #{fieldDefault,jdbcType=VARCHAR}, #{isBottom,jdbcType=INTEGER}, #{fieldGrade,jdbcType=INTEGER},
      #{parentKey,jdbcType=VARCHAR},
      )
  </insert>
    <insert id="insertVos" parameterType="java.util.List">
        insert into api_response_field (uid, uname, api_request_id,
        field_type, field_key, field_value,
        field_default, is_bottom, field_grade, parent_key
        )
        values
        <foreach collection="list" item="field" index="index" separator=",">
            (#{field.uid,jdbcType=BIGINT}, #{field.uname,jdbcType=VARCHAR}, #{field.apiRequestId,jdbcType=BIGINT},
            #{field.fieldType,jdbcType=INTEGER}, #{field.fieldKey,jdbcType=VARCHAR},
            #{field.fieldValue,jdbcType=VARCHAR},
            #{field.fieldDefault,jdbcType=VARCHAR}, #{field.isBottom,jdbcType=INTEGER},
            #{field.fieldGrade,jdbcType=INTEGER},
            #{field.parentKey, jdbcType=VARCHAR}
            )
        </foreach>

    </insert>
    <insert id="replaceVos" parameterType="com.ds.api.entity.vo.ApiResponseFieldVo">
        replace INTO api_response_field
        (uid, api_request_id,
        field_type, field_key, field_value,
        field_default, is_bottom, field_grade, parent_key)
        values
        <foreach collection="list" index="index" item="field" separator=",">
            (#{field.uid,jdbcType=BIGINT}, #{field.apiRequestId,jdbcType=BIGINT},
            #{field.fieldType,jdbcType=INTEGER}, #{field.fieldKey,jdbcType=VARCHAR},
            #{field.fieldValue,jdbcType=VARCHAR},
            #{field.fieldDefault,jdbcType=VARCHAR}, #{field.isBottom,jdbcType=INTEGER},
            #{field.fieldGrade,jdbcType=INTEGER},
            #{field.parentKey, jdbcType=VARCHAR})
        </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.ds.api.entity.model.ApiResponseField">
        insert into api_response_field
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="uname != null">
                uname,
            </if>
            <if test="apiRequestId != null">
                api_request_id,
            </if>
            <if test="fieldType != null">
                field_type,
            </if>
            <if test="fieldKey != null">
                field_key,
            </if>
            <if test="fieldValue != null">
                field_value,
            </if>
            <if test="fieldDefault != null">
                field_default,
            </if>
            <if test="parentKey != null">
                parent_key,
            </if>
            <if test="isBottom != null">
                is_bottom,
            </if>
            <if test="fieldGrade != null">
                field_grade,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="uname != null">
                #{uname,jdbcType=VARCHAR},
            </if>
            <if test="apiRequestId != null">
                #{apiRequestId,jdbcType=BIGINT},
            </if>
            <if test="fieldType != null">
                #{fieldType,jdbcType=INTEGER},
            </if>
            <if test="fieldKey != null">
                #{fieldKey,jdbcType=VARCHAR},
            </if>
            <if test="fieldValue != null">
                #{fieldValue,jdbcType=VARCHAR},
            </if>
            <if test="fieldDefault != null">
                #{fieldDefault,jdbcType=VARCHAR},
            </if>
            <if test="parentKey != null">
                #{parentKey,jdbcType=VARCHAR},
            </if>
            <if test="isBottom != null">
                #{isBottom,jdbcType=INTEGER},
            </if>
            <if test="fieldGrade != null">
                #{fieldGrade,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <insert id="insertVo" parameterType="com.ds.api.entity.vo.ApiResponseFieldVo">
        insert into api_response_field
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="uname != null">
                uname,
            </if>
            <if test="apiRequestId != null">
                api_request_id,
            </if>
            <if test="fieldType != null">
                field_type,
            </if>
            <if test="fieldKey != null">
                field_key,
            </if>
            <if test="fieldValue != null">
                field_value,
            </if>
            <if test="fieldDefault != null">
                field_default,
            </if>
            <if test="parentKey != null">
                parent_key,
            </if>
            <if test="isBottom != null">
                is_bottom,
            </if>
            <if test="fieldGrade != null">
                field_grade,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="uname != null">
                #{uname,jdbcType=VARCHAR},
            </if>
            <if test="apiRequestId != null">
                #{apiRequestId,jdbcType=BIGINT},
            </if>
            <if test="fieldType != null">
                #{fieldType,jdbcType=INTEGER},
            </if>
            <if test="fieldKey != null">
                #{fieldKey,jdbcType=VARCHAR},
            </if>
            <if test="fieldValue != null">
                #{fieldValue,jdbcType=VARCHAR},
            </if>
            <if test="fieldDefault != null">
                #{fieldDefault,jdbcType=VARCHAR},
            </if>
            <if test="parentKey != null">
                #{parentKey,jdbcType=VARCHAR},
            </if>
            <if test="isBottom != null">
                #{isBottom,jdbcType=INTEGER},
            </if>
            <if test="fieldGrade != null">
                #{fieldGrade,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ds.api.entity.model.ApiResponseField">
        update api_response_field
        <set>
            <if test="uname != null">
                uname = #{uname,jdbcType=VARCHAR},
            </if>
            <if test="apiRequestId != null">
                api_request_id = #{apiRequestId,jdbcType=BIGINT},
            </if>
            <if test="fieldType != null">
                field_type = #{fieldType,jdbcType=INTEGER},
            </if>
            <if test="fieldKey != null">
                field_key = #{fieldKey,jdbcType=VARCHAR},
            </if>
            <if test="fieldValue != null">
                field_value = #{fieldValue,jdbcType=VARCHAR},
            </if>
            <if test="fieldDefault != null">
                field_default = #{fieldDefault,jdbcType=VARCHAR},
            </if>
            <if test="parentKey != null">
                parent_key = #{parentKey,jdbcType=VARCHAR},
            </if>
            <if test="isBottom != null">
                is_bottom = #{isBottom,jdbcType=INTEGER},
            </if>
            <if test="fieldGrade != null">
                field_grade = #{fieldGrade,jdbcType=INTEGER},
            </if>
        </set>
        where uid = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ds.api.entity.model.ApiResponseField">
    update api_response_field
    set uname = #{uname,jdbcType=VARCHAR},
      api_request_id = #{apiRequestId,jdbcType=BIGINT},
      field_type = #{fieldType,jdbcType=INTEGER},
      field_key = #{fieldKey,jdbcType=VARCHAR},
      field_value = #{fieldValue,jdbcType=VARCHAR},
      field_default = #{fieldDefault,jdbcType=VARCHAR},
      parent_key = #{parentKey,jdbcType=VARCHAR},
      is_bottom = #{isBottom,jdbcType=INTEGER},
      field_grade = #{fieldGrade,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=BIGINT}
  </update>
    <select id="selectByRequest" parameterType="java.lang.Long" resultMap="BaseResultMapVo">
    SELECT * FROM api_response_field
    WHERE api_request_id = #{requestId,jdbcType=BIGINT}
    order by field_grade
  </select>
    <delete id="deleteByRequest">
    DELETE FROM api_response_field
    WHERE api_request_id = #{apiRequestId,jdbcType=BIGINT}
  </delete>

    <select id="selectByVo" resultMap="BaseResultMapVo" parameterType="com.ds.api.entity.vo.ApiResponseFieldVo">
    SELECT * FROM api_response_field
    WHERE api_request_id = #{requestId,jdbcType=BIGINT}
  </select>
    <select id="selectVo" resultMap="BaseResultMapVo">
    SELECT * FROM api_response_field
    WHERE uid = #{uid,jdbcType=BIGINT}
  </select>


    <delete id="deleteByModule">
    delete from api_response_field
    where api_request_id in
    (
    select uid from api_request where
    api_module_id = #{moduleId}
    )
  </delete>

</mapper>